package cfg;

message TCfg {
	message TNetworkCfg {
		optional bool enabled = 1;
		optional bool debug = 2;
		repeated string devices = 3;
		optional uint32 default_prio = 4;
		optional uint32 default_max_guarantee = 5;
		optional uint32 default_guarantee = 6;
		optional uint32 default_limit = 7;
		message TNetworkAlias {
			required string iface = 1;
			required string name = 2;
		}
		repeated TNetworkAlias alias = 8;
	}

	message TFileCfg {
		optional string path = 1;
		optional uint32 perm = 2;
	}

	message TRpcSockCfg {
		optional TFileCfg file = 1;
		optional string group = 2;
	}

	message TLogCfg {
		optional bool verbose = 1;
	}

	message TKeyvalCfg {
		optional TFileCfg file = 1;
		optional string size = 2;
	}

	message TDaemonCfg {
		optional uint32 max_clients = 1;
		optional uint32 slave_read_timeout_s = 2;
		optional uint32 cgroup_remove_timeout_s = 3;
		optional uint32 freezer_wait_timeout_s = 4;
		optional uint64 memory_guarantee_reserve = 5;
		optional TFileCfg pidmap = 6;
		optional uint64 rotate_logs_timeout_s = 7;
		optional string sysfs_root = 8;
	}

	message TContainerCfg {
		optional uint32 max_log_size = 1;
		optional string tmp_dir = 2;
		optional uint32 aging_time_s = 3;
		optional uint32 respawn_delay_ms = 4;
		optional uint32 stdout_limit = 5;
		optional uint32 private_max = 6;
		optional uint32 default_cpu_prio = 7;
		optional uint32 kill_timeout_ms = 8;
		optional uint32 stop_timeout_ms = 9;
	}

	optional TNetworkCfg network = 1;
	optional TFileCfg master_pid = 2;
	optional TFileCfg slave_pid = 3;
	optional TFileCfg master_log = 4;
	optional TFileCfg slave_log = 5;
	optional TRpcSockCfg rpc_sock = 6;
	optional TLogCfg log = 7;
	optional TKeyvalCfg keyval = 8;
	optional TDaemonCfg daemon = 9;
	optional TContainerCfg container = 10;
}
