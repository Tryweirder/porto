#!/bin/sh

set -e

bootstrap() {
	local root=$1

	debootstrap --exclude=ubuntu-minimal,resolvconf --arch amd64 precise $root http://mirror.yandex.ru/ubuntu

	cat > $root/etc/resolv.conf <<EOF
search search.yandex.net yandex.ru
nameserver 2a02:6b8:0:3400::1
nameserver 2a02:6b8::1:1
options timeout:1 attempts:1
EOF

	echo "deb http://mirror.yandex.ru/ubuntu precise main restricted universe multiverse" > $root/etc/apt/sources.list

	cat > $root/etc/apt/sources.list.d/yandex-search-precise.list <<EOF
deb http://search-precise.dist.yandex.ru/search-precise stable/all/
deb http://search-precise.dist.yandex.ru/search-precise stable/amd64/
EOF

	cat > $root/etc/apt/sources.list.d/yandex-search.list <<EOF
deb http://search.dist.yandex.ru/search stable/all/
deb http://search.dist.yandex.ru/search stable/amd64/
EOF

	cat > $root/etc/apt/sources.list.d/yandex.list <<EOF
deb http://common.dist.yandex.ru/common stable/all/
deb http://common.dist.yandex.ru/common stable/amd64/
EOF

	cat > $root/etc/hosts <<EOF
127.0.0.1	localhost
::1		localhost ip6-localhost ip6-loopback
fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters
EOF

	cat > $root/etc/init.d/ya-fastbone-tun <<'EOFEOF'
#/bin/sh

#
# ya-fastbone-tun init script
#

### BEGIN INIT INFO
# Provides:          ya-fastbone-tun
# Required-Start:
# Required-Stop:
# Should-Start:      ya-fastbone-ra
# Should-Stop:       ya-fastbone-ra
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: This script starts yandex fastbone tun networking
# Description:       https://wiki.yandex-team.ru/NOC/tun66kiwi
#                    depends on python-ipaddr debian package installed
### END INIT INFO

# We do not work without file below
if [ -f /etc/ya-network-functions ] ; then
    . /etc/ya-network-functions
else
    echo "ERROR: /etc/ya-network-functions not found, I'm going to die..."
    exit 1
fi

send_request_to_dyndns() {
    echo "Send request to dyndns:"
    curl -X POST --data-binary @- "https://racktables.yandex.net/export/dnsupdate2.php?mode=self-replace&force=1&ptr=sync" <<EOF
${my_name} ${tun_ip}
${my_fb_name} ${fb_ip}
EOF
}

ya_fastbone_tun_common() {
    my_name=$(hostname)
    my_fb_name="fb-${my_name}"
    anycast=2a02:6b8:f000:ff00::1
    bb_net=2a02:6b8:b010:100::/56
    fb_addr=$(ip -6 addr show dev vlan768 | grep global | awk '{print $2}')
    fb_ip=$(echo $fb_addr | cut -d '/' -f1) #2a02:6b8:f000:4c5:dd:7bff:fea2:1f2c
    fb_gw=$(python -c "import ipaddr; print ipaddr.IPv6Network('$fb_ip/64').network")1
    vlan_net=$(python -c "import ipaddr; print ipaddr.IPv6Network('$anycast/36').network")/36
    tun_ip=$(python -c "import ipaddr; network = ipaddr.IPv6Network('${bb_net}'); base_ip = ipaddr.IPv6Address('${fb_ip}'); print ipaddr.IPv6Address(int(network.network) | (int(base_ip) & int(network.hostmask)))")

    echo ""
    echo "my_name:" $my_name
    echo "my_fb_name:" $my_fb_name
    echo "fb_addr:" $fb_addr
    echo "fb_ip:" $fb_ip
    echo "fb_gw:" $fb_gw
    echo "tun_ip:" $tun_ip
    echo "vlan_net:" $vlan_net
}

ya_fastbone_tun_stop() {
    ya_fastbone_tun_common

    ip -6 route del ${vlan_net} via ${fb_gw}
    ip -6 link set eth0 down
    ip -6 tunnel del eth0 mode ip6ip6
}

ya_fastbone_tun_start() {
    ya_fastbone_tun_common

    ip -6 tunnel add eth0 mode ip6ip6 remote ${anycast} local ${fb_ip}
    ip -6 link set eth0 up
    ip -6 addr add ${tun_ip}/64 dev eth0
    ip -6 route delete default
    ip -6 route add ::/0 dev eth0
    ip -6 route add ${vlan_net} via ${fb_gw}

    #while true; do
    #   nc -w 1 -z racktables.yandex.net 443 && { send_request_to_dyndns ; return; } || sleep 5
    #done

}

case "$1" in
  start)
      echo -n "Starting ya-fastbone-tun: "
      ya_fastbone_tun_start
      ya_return $?
      ;;
  stop)
      echo -n "Stopping ya-fastbone-tun: "
      ya_fastbone_tun_stop
      ya_return $?
      ;;
  restart|force-reload)
      echo -n "Restarting ya-fastbone-tun: "
      ya_fastbone_tun_stop
      sleep 1
      ya_fastbone_tun_start
      ya_return $?
      ;;
  *)
      echo "Usage: $0 {start|stop|restart|force-reload}" >&2
      exit 1
      ;;
esac

exit 0
EOFEOF
}

prepare() {
	apt-get update
	apt-get install -y --force-yes yandex-archive-keyring
	apt-get install -y --force-yes yandex-search-common-apt yandex-search-user-root yandex-search-user-tcpdump yandex-search-common-settings yandex-search-common-sysctl yandex-search-cauth yandex-search-common-rsyslog yandex-search-yasubr yandex-agave2-client yandex-agave-checks-system sudo vim curl wget atop bc binutils bsd-mailx dnsutils file htop iptables language-pack-en less logrotate lsof netcat-openbsd openssh-server vmtouch strace ltrace
	#apt-get install -y --force-yes yandex-search-common-apt yandex-search-user-monitor yandex-search-user-root yandex-search-user-tcpdump yandex-search-common-settings yandex-search-common-sysctl yandex-search-cauth yandex-search-common-rsyslog yandex-search-yasubr yandex-agave2-client yandex-agave-checks-system sudo vim curl wget atop bc binutils bsd-mailx dnsutils file htop iptables language-pack-en less logrotate lsof netcat-openbsd openssh-server vmtouch strace ltrace

	sudo apt-get install python-ipaddr

	update-rc.d -f ya-fastbone-tun  defaults

	# cleanup
	apt-get --purge clean
	sed -e '/ipadd/d' -i /etc/rc.conf.local
	> /etc/hostname
	rm -f /etc/ssh/*key*
	rm -f /var/cache/apt/archives/*.deb
	rm -rf /var/lib/apt/lists/*
	rm -f /var/cache/apt/*.bin
	for i in `find /var/log/ -iname *.gz`; do rm $i; done
	for i in `find /var/log/ -type f`; do echo > $i; done
	for i in `find /var/log/ -iname *.1`; do rm $i; done
	> /root/.bash_history
}

check() { :; }

eval "$@"
