#!/bin/sh

set -e

set -- `getopt c $*`
[ ! $? -eq 0 ] && { exit 1; }

NEED_CLEAR=0
while [ ! "$1" = "--" ]; do
	case "$1" in
	-c)
		NEED_CLEAR=1
		;;
	*)
		"Invalid argument $1"
		;;
	esac
	shift
done
shift

CONFIG() {
	REPO=$(cd $(dirname $0)/../ && pwd)
	DIST=$REPO/dist
	USER=stfomichev
	ROOT=$DIST/$NAME

	pctl() {
		echo portoctl "$@"
		sudo $REPO/portoctl "$@"
	}

	bootstrap() {
		local tar="$DIST/${NAME}.img"
		[ -f $tar ] || (cd $DIST && curl -L $URL > $tar)
		[ -d $ROOT ] || (mkdir -p $ROOT && cd $ROOT && sudo tar xf $tar && sudo chown $USER:$USER $ROOT && sudo chmod 0755 $ROOT)
	}

	clone() {
		[ -d $1 ] || {
			mkdir -p $1
			(cd $1 && git clone $REPO . && git submodule init && git submodule update)
		}
	}

	CLEAR() {
		[ $NEED_CLEAR -eq 1 ] && sudo rm -rf $ROOT || :
	}

	GET() {
		URL=$1

		CLEAR

		echo "Downloading image..."
		bootstrap
		echo "Preparing repository..."
		clone $ROOT/src
	}

	RUN() { pctl exec $NAME root="$ROOT" cwd="/src" hostname="$NAME" command="$*"; }

	DEBUILD() {
		echo "Packaging..."
		stty sane
		pctl exec $NAME command="debuild -i -us -uc -b $*" root="${ROOT}" cwd="/src"
	}

	NOOP() {
		echo "#!/bin/sh" | sudo tee $ROOT/$1
		sudo chmod +x $ROOT/$1
	}

	INSTALL() {
		sudo mkdir -p $ROOT/boot/grub/
		sudo touch $ROOT/boot/grub/menu.lst
		RUN apt-get install -y grub
		NOOP /sbin/update-grub
		NOOP /sbin/update-initramfs

		RUN apt-get install -y --force-yes linux-image-server linux-image-3.10.59-19 linux-firmware wireless-crda crda libnl-3-200 libnl-genl-3-200 wireless-regdb linux-tools linux-headers-3.10.59-19 kexec-tools anacron makedumpfile libdw1

		RUN apt-get install -y --force-yes logrotate
		RUN groupadd porto || :
		RUN dpkg -i /yandex-porto_*_amd64.deb
		RUN apt-get install -y --force-yes python-central python-protobuf
		RUN dpkg -i /python-portopy_*_all.deb

		# make sure package is installed
		for binary in portod portoctl portotest; do
			RUN which $binary || { echo "ERROR: Can't find $binary"; exit 1; }
		done
	}

	SELFTEST() {
		pctl exec porto command="./portod --stdlog --failsafe" root="${ROOT}" cwd="/src"
	#	pctl run porto command="./portod" root="${ROOT}" cwd="/src"
	#	pctl exec porto/selftest command="./portotest" root="${ROOT}" cwd="/src"
	#	pctl destroy porto
	}
}

CP() {
	pctl exec $NAME root="$ROOT" hostname="$NAME" command="cp /tmp/__copy_me__ '$2'" bind="$1 /tmp/__copy_me__ ro"
}

ECHO() {
	local file="$1"
	local tmp="$(mktemp)"
	cat > $tmp
	CP $tmp $file
	rm $tmp
}

REPO() {
	local file="$1"
	shift
	local url="$1"
	shift

	local tmp="$(mktemp)"
	echo > $tmp
	for repo in "$@"; do
		echo "deb $url $repo" >> $tmp
	done

	CP $tmp /etc/apt/sources.list.d/$file
	rm $tmp
}

if [ $# -ge 1 ]; then
	for conf in "$@"; do
		NAME=$(echo $(basename $conf) | sed -e 's/.conf$//')
		if [ -z "$conf" ]; then
			echo "Invalid config name: $NAME ($conf)"
			exit 1
		fi
		CONFIG $NAME

		. $conf
	done
else
	for conf in ./*.conf; do
		echo "Using config $conf"
		. $conf
		CLEAR
	done
fi
