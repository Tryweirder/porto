#!/bin/sh

set -e

set -- `getopt c $*`
[ ! $? -eq 0 ] && { exit 1; }

NEED_CLEAR=0
while [ ! "$1" = "--" ]; do
	case "$1" in
	-c)
		NEED_CLEAR=1
		;;
	*)
		"Invalid argument $1"
		;;
	esac
	shift
done
shift

CONFIG() {
	if [ -z "$1" ]; then
		echo 'Please specify name'
		exit 1
	fi

	NAME="$1"
	REPO=$(cd $(dirname $0)/../ && pwd)
	DIST=$REPO/dist
	USER=stfomichev
	ROOT=$DIST/$NAME

	pctl() {
		echo portoctl "$@"
		sudo $REPO/portoctl "$@"
	}
	pexec() { pctl exec $NAME env="container=lxc" root="$ROOT" cwd="/src" hostname="$NAME" command="$*"; }

	bootstrap() {
		tar="$DIST/${NAME}.img"
		[ -f $tar ] || (cd $DIST && curl -L $URL > $tar)
		[ -d $ROOT ] || (mkdir -p $ROOT && cd $ROOT && sudo tar xf $tar && sudo chown $USER:$USER $ROOT && sudo chmod 0755 $ROOT)
	}

	clone() {
		[ -d $1 ] || {
			mkdir -p $1
			(cd $1 && git clone $REPO . && git submodule init && git submodule update)
		}
	}

	CLEAR() {
		[ $NEED_CLEAR -eq 1 ] && sudo rm -rf $ROOT || :
	}

	GET() {
		URL=$1

		CLEAR

		echo "Downloading image..."
		bootstrap
		echo "Preparing repository..."
		clone $ROOT/src
	}

	RUN() {
		pexec "$@"
	}

	DEBUILD() {
		echo "Packaging..."
		stty sane
		pctl exec $NAME command="debuild -i -us -uc -b $*" root="${ROOT}" cwd="/src"
	}

	SELFTEST() {
		pctl exec porto command="./portod --stdlog --failsafe" root="${ROOT}" cwd="/src"
	#	pctl run porto command="./portod" root="${ROOT}" cwd="/src"
	#	pctl exec porto/selftest command="./portotest" root="${ROOT}" cwd="/src"
	#	pctl destroy porto
	}
}

if [ $# -ge 1 ]; then
	for conf in "$@"; do
		. $conf
	done
else
	for conf in ./*.conf; do
		echo "Using config $conf"
		. $conf
		CLEAR
	done
fi
