# Build
git clone ssh://git.yandex.ru/search-admin/porto.git
sudo apt-get install build-essential libtool autoconf pkg-config flex bison
cd porto
git submodule init
git submodule update
cmake .
make

# Build stable version of package
git checkout v0.7
debuild

# Release new version
scripts/release

# Profile
cmake -DCMAKE_BUILD_TYPE=Debug . && make
~stfomichev/perf record -e cycles:u -g -F1000 -- portod
~stfomichev/perf report --stdio -n -G

# Coverage
cmake -DCMAKE_BUILD_TYPE=Debug . && make
HOST=vm ./scripts/remote_test false true stress
rm -rf porto && rsync -4 -av vm:src/porto $PWD
scripts/gencoverage porto coverage

# Debug netlink
NLDBG=10 NLCB=debug portod

# Locking scheme
## Containers
We have single lock on holder, and single lock for each container + acquired
flag which doesn't permit user to perform any operation on the acquired tree.

Container is acquired on the following RPC (other RPC methods just return BUSY
if container is acquired):
- start
- stop
- pause
- resume
- set property
- kill
- destroy

Events:
- OOM - targeted (check whether may die due to OOM without container lock)
- Respawn - targeted (check whether may respawn without container lock)
- Exit - check whether may exit without container lock
- CgroupSync - skip acquired
- RotateLogs - skip acquired
- WaitTimeout - targeted (no locks)

Acquire and locks:
( - holder lock
{ - acquire
[ - container lock

- Start/Stop a/b/c do ({a) [(a]) [(b]) [(c]})
- Pause/Resume/Set/Kill do a/b/c does ({a/b/c) [(a/b/c]})
- Wait - no locks, client is not in epoll so no concurrent access

## Volumes
We have single lock on volume holder, so any volume operation blocks others.


## Lock order

TVolume->Lock -> TVolumeHolder->Lock

TVolumeHolder->Lock -> TContainerHolder->Lock
