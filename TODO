- fix f*cking capabilities test on newer kernels
- nuke volumeAPI dir and move ext4_proj_quota.[hc] into util/
- kvalue - use id instead of substituting / with +
- add max_rss support
- run some kind of init process in meta container
- fix netfilter bug with >3.10
- mount root loop in root namespace (to better diagnose possible problems)
- root_readonly: remount root instead of binding into itself with ro
  - bind fails when source is link
- selftest: make sure we don't leak fds into child processes
- remove net_guarantee/net_limit
- chroot -> pivot_root (to remove all mounts from container)
- ? create cgroup for portod/portod-slave
- ? do periodic persistence checks
- ? use chrt instead of cpu.smart so we don't depend on smart kernels + set rt prio

# volume api
- use correct credentials when creating directories!!!
- don't call external process to copy resources
- don't call external process to calculate sha256
- do we need some kind of global semaphore to make sure no new references created in other process while we deconstructing volume

# properties
- ? supplementary_groups
- ? umask
- ? oneshot
- ? cpu_cores - reserve some cores for a container

# phase 4
##
- ? ro+rw images for container distribution
- ? enable user namespace
## net
- ? net_prio 0-7 -> 0-99
## cpu
- rt: create cgroup for non-smart tasks and throttle them
## kernel
- ? kernel support for cgroup to limit allowed ports
- ? kernel support for cgroup coredump path
## other
- ? start portod in container -> need to parse mountinfo, not mounts (because mountinfo skips mounts outside of chroot)
- ? use SO_PEERCRED to isolate parent containers from child in portod
## cleanup
- remove extern AckExitStatus from container->Stop()
- ? rotate (instead of truncating) subprocess stdout/stderr
- move all 'extern "C"' into one file
- use some kind of reference count for accounting running children
## nekt0n
- add namespaces
- ? get rid of globals/static which have class types (http://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Static_and_Global_Variables)
