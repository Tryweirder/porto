#!/bin/sh

set -e

export PATH="/usr/sbin:$PATH"

DUMMY_ETH=eth9

getver() { portoctl -v 2>&1 | grep $1 | awk '{print $2}'; }
checkver() { [ "$2" = "$3" ] || { echo "Invalid $1 version ($2 != $3)"; }; }

build() {
	version=$(git describe | sed -e 's/^v//')
	dch --newversion $version "teamcity build"
	find ../ -name '*.deb' -o -name '*.build' -o -name '*.changes' -print0 | xargs -0 rm -f
	debuild -i -us -uc -b
	sudo dpkg -i ../yandex-porto_${version}_amd64.deb

	checkver server v$version $(getver server)
	checkver client v$version $(getver client)
}

selftest() {
	netup
	sudo scripts/test false true
	sudo scripts/test true
	netdown
}

pkgtest() {
	sudo scripts/test pkg
}

stresstest() {
	sudo scripts/test stress
}

prlog() {
	echo "$1:"
	tail -n 40 $1
}

print_logs() {
	set +e

	prlog /var/log/portoloop.log
	prlog /var/log/portod.log
	netdown
}

netup() {
	# we need multiple network interfaces for selftest
	sudo ip link del $DUMMY_ETH || :
	sudo ip link add $DUMMY_ETH type dummy
	sudo ip link set dev $DUMMY_ETH up
	sudo ip addr add 192.168.2.2/16 dev $DUMMY_ETH
}

netdown() {
	sudo ip link del $DUMMY_ETH
	# TODO: enable dynamic_ifaces?
	sudo reload yandex-porto
}

fixcg() {
	# make current task belongs to root cgroups
	for cg in /sys/fs/cgroup/*; do
		echo $$ | sudo tee $cg/cgroup.procs &>/dev/null;
	done
}

fixcg

[ ! $# -eq 0 ] || set -- build selftest pkgtest stresstest
trap print_logs EXIT
for f in "$@"; do eval $f; done
trap - EXIT
