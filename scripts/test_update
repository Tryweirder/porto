#!/bin/bash

set -e

if [ $# -eq 0 ]; then
	echo "Please specify new package path"
	exit
fi

NEW_DPKG="$1"

expect() {
	local old="$1"
	local op="$2"
	local new="$3"

	if [ "$old" $op "$new" ]; then
		echo "OK: $old $op $new"
	else
		echo "FAILURE: $old ! $op $new"
		exit 1
	fi
}

getver() { portoctl -v 2>&1 | grep server | awk '{print $2}'; }

check_state() {
	expect "$(portoctl list -1 | tr -d ' ')" = "$(echo -e 'a\na/b\nx\ny\nz\n')"

	expect "$(portoctl get x command)" = "sleep 1000"
	expect "$(portoctl get x isolate)" = "false"
	expect "$(portoctl get x state)" = "running"

	expect "$(portoctl get y command)" = "false"
	expect "$(portoctl get y isolate)" = "true"
	expect "$(portoctl get y state)" = "dead"
	expect "$(portoctl dget y exit_status)" = "256"

	expect "$(portoctl get z command)" = "sleep 3000"
	expect "$(portoctl get z isolate)" = "true"
	expect "$(portoctl get z state)" = "stopped"

        # current stable version (1.9) reports invalid state
        # for meta containers; uncomment when stable is 1.16
        #expect "$(portoctl get a state)" = "meta"

	expect "$(portoctl get a/b command)" = "sleep 4000"
	expect "$(portoctl get a/b state)" = "running"
}

cleanup_tc() {
	for link in $(ip -o link | awk -F: '{print $2}'); do
		tc filter del dev $link pref 10 || :
	done
}

wait_porto() {
        echo "Waiting porto startup..."
        # versions prior to 1.17 don't return error when portoctl
        # can't connect to socket, just sleep here
        sleep 10

#       for i in `seq 60`; do
#               if portoctl list; then
#                       return
#               fi
#
#               sleep 1
#       done
#
#       echo "Porto is dead, don't continue"
#       exit 1
}

cleanup_tc
sudo apt-get install -y --force-yes yandex-porto/stable
sudo restart yandex-porto
wait_porto
oldver="$(getver)"

portoctl run x command='sleep 1000' isolate=false
portoctl run y command='false'
sleep 1 # wait y exit

portoctl create z
portoctl set z command sleep 3000

portoctl create a
portoctl create a/b
portoctl set a/b command sleep 4000
portoctl start a/b

check_state

cleanup_tc
sudo dpkg -i "$NEW_DPKG"
wait_porto
newver="$(getver)"

expect "$oldver" != "$newver"

check_state

portoctl destroy a x y z
